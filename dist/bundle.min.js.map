{"version":3,"file":"bundle.min.js","mappings":"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","sources":["webpack://mixer-game/./src/volume-slider.ts","webpack://mixer-game/./src/index.ts"],"sourcesContent":["class VolumeSlider extends HTMLElement {\n    constructor() {\n        super();\n        this.initialGain = 1;\n        this.attachShadow({ mode: 'open' });\n    }\n    connectedCallback() {\n        const valueAttr = this.getAttribute('value');\n        if (valueAttr !== null) {\n            this.initialGain = parseFloat(valueAttr);\n        }\n        this.render();\n        this.setupEventListeners();\n    }\n    render() {\n        const name = this.getAttribute('name') || 'Track';\n        const sliderValue = this.gainToSliderValue(this.initialGain);\n        const dbValue = this.gainToDb(this.initialGain);\n        this.shadowRoot.innerHTML = `\r\n      <style>\r\n        .fader {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n          width: 60px;\r\n          height: 220px;\r\n          background: #2c3e50;\r\n          border-radius: 10px;\r\n          padding: 10px 0;\r\n          box-sizing: border-box;\r\n          position: relative;\r\n        }\r\n        .slider-container {\r\n          position: relative;\r\n          height: 150px;\r\n          width: 40px;\r\n          background: #34495e;\r\n          border-radius: 20px;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          padding: 10px 0;\r\n        }\r\n        input[type=\"range\"] {\r\n          writing-mode: bt-lr;\r\n          -webkit-appearance: none;\r\n          width: 200px;\r\n          height: 10px;\r\n          background: transparent;\r\n          transform: rotate(-90deg);\r\n          z-index: 2;\r\n        }\r\n        input[type=\"range\"]::-webkit-slider-thumb {\r\n          -webkit-appearance: none;\r\n          width: 20px;\r\n          height: 40px;\r\n          background: #3498db;\r\n          cursor: pointer;\r\n          border-radius: 4px;\r\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n        }\r\n        .scale {\r\n          position: absolute;\r\n          left: 45px;\r\n          top: 10px;\r\n          height: 150px;\r\n          width: 20px;\r\n          color: #bdc3c7;\r\n          font-size: 10px;\r\n        }\r\n        .scale span {\r\n          position: absolute;\r\n          left: 0;\r\n          transform: translateY(50%);\r\n        }\r\n        label {\r\n          margin-top: 10px;\r\n          text-align: center;\r\n          color: #ecf0f1;\r\n          font-size: 12px;\r\n          font-weight: bold;\r\n        }\r\n        .value-display {\r\n          margin-top: 5px;\r\n          color: #3498db;\r\n          font-size: 14px;\r\n        }\r\n      </style>\r\n      <div class=\"fader\">\r\n        <div class=\"slider-container\">\r\n          <input type=\"range\" min=\"0\" max=\"100\" step=\"1\" value=\"${sliderValue}\">\r\n          <div class=\"scale\">\r\n            <span style=\"bottom: 100%;\">14</span>\r\n            <span style=\"bottom: 92.86%;\">8</span>\r\n            <span style=\"bottom: 83.33%;\">0</span>\r\n            <span style=\"bottom: 71.43%;\">-10</span>\r\n            <span style=\"bottom: 59.52%;\">-20</span>\r\n            <span style=\"bottom: 0%;\">-∞</span>\r\n          </div>\r\n        </div>\r\n        <label>${name}</label>\r\n        <span class=\"value-display\">${dbValue <= VolumeSlider.MIN_DB + 0.1 ? '-∞' : dbValue.toFixed(1)} dB</span>\r\n      </div>\r\n    `;\n        this.slider = this.shadowRoot.querySelector('input');\n        this.valueDisplay = this.shadowRoot.querySelector('.value-display');\n    }\n    setupEventListeners() {\n        this.slider.addEventListener('input', (e) => {\n            const target = e.target;\n            const value = parseInt(target.value);\n            const gain = this.sliderValueToGain(value);\n            const dbValue = this.gainToDb(gain);\n            this.updateValueDisplay(dbValue);\n            this.dispatchEvent(new CustomEvent('change', {\n                detail: { value: gain },\n                bubbles: true,\n                composed: true,\n            }));\n        });\n    }\n    setDisabled(isDisabled) {\n        this.slider.disabled = isDisabled;\n    }\n    setValue(gainValue) {\n        const sliderValue = this.gainToSliderValue(gainValue);\n        this.slider.value = sliderValue.toString();\n        this.updateValueDisplay(this.gainToDb(gainValue));\n    }\n    gainToSliderValue(gain) {\n        if (gain <= 0) {\n            return 0;\n        }\n        else {\n            const db = this.gainToDb(gain);\n            const value = ((db - VolumeSlider.MIN_DB) / (VolumeSlider.MAX_DB - VolumeSlider.MIN_DB)) * 100;\n            return Math.round(value);\n        }\n    }\n    sliderValueToGain(value) {\n        if (value <= 0) {\n            return 0;\n        }\n        else {\n            const db = ((value / 100) * (VolumeSlider.MAX_DB - VolumeSlider.MIN_DB)) + VolumeSlider.MIN_DB;\n            return this.dbToGain(db);\n        }\n    }\n    updateValueDisplay(dbValue) {\n        if (dbValue <= VolumeSlider.MIN_DB + 0.1 || !isFinite(dbValue)) {\n            this.valueDisplay.textContent = '-∞ dB';\n        }\n        else {\n            this.valueDisplay.textContent = `${dbValue.toFixed(1)} dB`;\n        }\n    }\n    gainToDb(gainValue) {\n        if (gainValue <= 0) {\n            return -Infinity;\n        }\n        else {\n            return 20 * Math.log10(gainValue);\n        }\n    }\n    dbToGain(dbValue) {\n        return Math.pow(10, dbValue / 20);\n    }\n}\nVolumeSlider.MIN_DB = -70; // 代表 -∞ dB\nVolumeSlider.MAX_DB = 14;\nif (!customElements.get('volume-slider')) {\n    customElements.define('volume-slider', VolumeSlider);\n}\nexport default VolumeSlider;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport VolumeSlider from \"./volume-slider\";\n// 音頻混音器遊戲\nclass MixerGame {\n    constructor() {\n        this.isAudioInitialized = false;\n        this.isAudioLoaded = false;\n        this.isAnswerMode = false;\n        this.playerSettings = {\n            vocal: 1,\n            guitar: 1,\n            piano: 1,\n            other: 1,\n            bass: 1,\n            drum: 1\n        };\n        this.isSubmitted = false;\n        this.isComparisonMode = false;\n        this.isPlaying = false;\n        this.startTime = 0;\n        this.pauseTime = 0;\n        // const isLocalDevelopment = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\n        // this.tracksBaseUrl = isLocalDevelopment\n        //     ? '../songs/UpLifeSongs/以斯拉 - 至高全能神的榮光'\n        //     : '../../songs/UpLifeSongs/以斯拉 - 至高全能神的榮光';\n        this.tracksBaseUrl = '../songs/UpLifeSongs/以斯拉 - 至高全能神的榮光';\n        this.tracks = ['vocal', 'guitar', 'piano', 'other', 'bass', 'drum'];\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.audioBuffers = {};\n        this.audioSources = {};\n        this.gainNodes = {};\n        this.analyserNodes = {};\n        this.masterGainNode = this.audioContext.createGain();\n        this.randomGains = {};\n        // 確保 VolumeSlider 已註冊\n        if (!customElements.get('volume-slider')) {\n            customElements.define('volume-slider', VolumeSlider);\n        }\n        this.initGame();\n    }\n    initAudio() {\n        if (this.isAudioInitialized)\n            return;\n        this.masterGainNode.connect(this.audioContext.destination);\n        this.tracks.forEach(track => {\n            this.gainNodes[track] = this.audioContext.createGain();\n            this.analyserNodes[track] = this.audioContext.createAnalyser();\n            this.gainNodes[track].connect(this.analyserNodes[track]);\n            this.analyserNodes[track].connect(this.masterGainNode);\n            this.randomGains[track] = Math.exp(Math.random() * Math.log(16)) / 4; // 0.25 到 4 的範圍\n            const fader = document.getElementById(`${track}-fader`);\n            if (fader) {\n                fader.setValue(1);\n                this.setTrackVolume(track, 1);\n            }\n        });\n        this.isAudioInitialized = true;\n    }\n    loadAudio() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const playPauseBtn = document.getElementById('playPauseBtn');\n            playPauseBtn.textContent = '載入中';\n            playPauseBtn.disabled = true;\n            try {\n                yield Promise.all(this.tracks.map((track) => __awaiter(this, void 0, void 0, function* () {\n                    const response = yield fetch(`${this.tracksBaseUrl}/${track}.mp3`);\n                    const audioData = yield response.arrayBuffer();\n                    this.audioBuffers[track] = yield this.audioContext.decodeAudioData(audioData);\n                })));\n                this.isAudioLoaded = true;\n                playPauseBtn.innerHTML = '&#9658;';\n                playPauseBtn.disabled = false;\n                console.log('所有音軌已成功載入');\n            }\n            catch (error) {\n                console.error('載入音頻時發生錯誤:', error);\n                playPauseBtn.textContent = '載入失敗';\n                playPauseBtn.disabled = false;\n            }\n        });\n    }\n    createAudioSources() {\n        this.tracks.forEach(track => {\n            if (this.audioSources[track]) {\n                this.audioSources[track].disconnect();\n            }\n            this.audioSources[track] = this.audioContext.createBufferSource();\n            this.audioSources[track].buffer = this.audioBuffers[track];\n            this.audioSources[track].connect(this.gainNodes[track]);\n            this.audioSources[track].loop = true;\n        });\n    }\n    togglePlayPause() {\n        if (!this.isAudioInitialized) {\n            this.initAudio();\n            this.loadAudio();\n            return;\n        }\n        if (!this.isAudioLoaded)\n            return;\n        if (this.isPlaying) {\n            this.audioContext.suspend();\n            this.pauseTime = this.audioContext.currentTime;\n        }\n        else {\n            this.audioContext.resume();\n            if (!this.audioSources[this.tracks[0]] || !this.audioSources[this.tracks[0]].buffer) {\n                this.createAudioSources();\n                this.startTime = this.audioContext.currentTime;\n                this.tracks.forEach(track => this.audioSources[track].start());\n            }\n            else {\n                this.startTime += this.audioContext.currentTime - this.pauseTime;\n            }\n            requestAnimationFrame(() => this.updateTimeSlider());\n        }\n        this.isPlaying = !this.isPlaying;\n        const playPauseBtn = document.getElementById('playPauseBtn');\n        playPauseBtn.innerHTML = this.isPlaying ? '&#10074;&#10074;' : '&#9658;';\n    }\n    updateTimeSlider() {\n        if (!this.isPlaying)\n            return;\n        const currentTime = this.audioContext.currentTime - this.startTime;\n        const duration = this.audioBuffers[this.tracks[0]].duration;\n        const percentage = (currentTime / duration) * 100;\n        const timeSlider = document.getElementById('timeSlider');\n        timeSlider.value = percentage.toString();\n        requestAnimationFrame(() => this.updateTimeSlider());\n    }\n    setMasterVolume(volume) {\n        if (!this.isAudioInitialized)\n            return;\n        this.masterGainNode.gain.setValueAtTime(volume, this.audioContext.currentTime);\n    }\n    setTrackVolume(track, gain) {\n        if (!this.isAudioInitialized)\n            return;\n        this.gainNodes[track].gain.setValueAtTime(gain, this.audioContext.currentTime);\n    }\n    setPlaybackPosition(position) {\n        if (!this.isAudioInitialized || !this.isAudioLoaded)\n            return;\n        const duration = this.audioBuffers[this.tracks[0]].duration;\n        const newTime = (position / 100) * duration;\n        const wasPlaying = this.isPlaying;\n        if (this.isPlaying) {\n            this.audioContext.suspend();\n        }\n        this.createAudioSources();\n        this.startTime = this.audioContext.currentTime - newTime;\n        this.tracks.forEach(track => this.audioSources[track].start(0, newTime));\n        if (wasPlaying) {\n            this.audioContext.resume();\n            requestAnimationFrame(() => this.updateTimeSlider());\n        }\n        this.isPlaying = wasPlaying;\n        const playPauseBtn = document.getElementById('playPauseBtn');\n        playPauseBtn.innerHTML = this.isPlaying ? '&#10074;&#10074;' : '&#9658;';\n    }\n    calculateScore() {\n        if (!this.isAudioInitialized || !this.isAudioLoaded)\n            return 0;\n        let totalDifference = 0;\n        this.tracks.forEach(track => {\n            const userGain = this.playerSettings[track];\n            const targetGain = 1 / this.randomGains[track];\n            const logDifference = Math.abs(Math.log2(userGain) - Math.log2(targetGain));\n            totalDifference += logDifference;\n        });\n        const score = Math.max(0, 100 - (totalDifference / this.tracks.length) * 25);\n        return Math.round(score);\n    }\n    toggleComparisonMode(isComparison) {\n        this.isComparisonMode = isComparison;\n        this.tracks.forEach(track => {\n            const fader = document.getElementById(`${track}-fader`);\n            if (isComparison) {\n                const comparisonGain = 1 / this.randomGains[track];\n                this.setTrackVolume(track, comparisonGain);\n                fader.setValue(comparisonGain);\n            }\n            else {\n                this.setTrackVolume(track, this.playerSettings[track]);\n                fader.setValue(this.playerSettings[track]);\n            }\n            fader.setDisabled(isComparison);\n        });\n    }\n    initGame() {\n        const playPauseBtn = document.getElementById('playPauseBtn');\n        playPauseBtn.addEventListener('click', () => this.togglePlayPause());\n        const timeSlider = document.getElementById('timeSlider');\n        timeSlider.addEventListener('input', (e) => this.setPlaybackPosition(parseFloat(e.target.value)));\n        const masterVolume = document.getElementById('master-volume');\n        masterVolume.addEventListener('change', (e) => {\n            const customEvent = e;\n            this.setMasterVolume(customEvent.detail.value);\n        });\n        this.tracks.forEach(track => {\n            const fader = document.getElementById(`${track}-fader`);\n            fader.addEventListener('change', (e) => {\n                const customEvent = e;\n                if (!this.isAnswerMode) {\n                    const value = customEvent.detail.value;\n                    this.setTrackVolume(track, value);\n                    this.playerSettings[track] = value;\n                }\n            });\n        });\n        const modeToggleCheckbox = document.getElementById('modeToggleCheckbox');\n        modeToggleCheckbox.addEventListener('change', (e) => {\n            this.toggleComparisonMode(e.target.checked);\n        });\n        const submitBtn = document.getElementById('submitBtn');\n        submitBtn.addEventListener('click', () => {\n            const score = this.calculateScore();\n            const scoreDisplay = document.getElementById('scoreDisplay');\n            scoreDisplay.style.visibility = 'visible';\n            scoreDisplay.textContent = score.toString();\n            const comparisonLabel = document.getElementById('comparisonLabel');\n            comparisonLabel.textContent = '正確答案';\n            this.isSubmitted = true;\n            modeToggleCheckbox.checked = false;\n            this.toggleComparisonMode(false);\n        });\n    }\n}\n// 開始遊戲\nnew MixerGame();\n"],"names":["VolumeSlider","HTMLElement","constructor","super","this","initialGain","attachShadow","mode","connectedCallback","valueAttr","getAttribute","parseFloat","render","setupEventListeners","name","sliderValue","gainToSliderValue","dbValue","gainToDb","shadowRoot","innerHTML","MIN_DB","toFixed","slider","querySelector","valueDisplay","addEventListener","e","target","value","parseInt","gain","sliderValueToGain","updateValueDisplay","dispatchEvent","CustomEvent","detail","bubbles","composed","setDisabled","isDisabled","disabled","setValue","gainValue","toString","MAX_DB","Math","round","db","dbToGain","isFinite","textContent","log10","pow","customElements","get","define","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","isAudioInitialized","isAudioLoaded","isAnswerMode","playerSettings","vocal","guitar","piano","other","bass","drum","isSubmitted","isComparisonMode","isPlaying","startTime","pauseTime","tracksBaseUrl","tracks","audioContext","window","AudioContext","webkitAudioContext","audioBuffers","audioSources","gainNodes","analyserNodes","masterGainNode","createGain","randomGains","initGame","initAudio","connect","destination","forEach","track","createAnalyser","exp","random","log","fader","document","getElementById","setTrackVolume","loadAudio","playPauseBtn","all","map","response","fetch","audioData","arrayBuffer","decodeAudioData","console","error","createAudioSources","disconnect","createBufferSource","buffer","loop","togglePlayPause","suspend","currentTime","resume","start","requestAnimationFrame","updateTimeSlider","percentage","duration","setMasterVolume","volume","setValueAtTime","setPlaybackPosition","position","newTime","wasPlaying","calculateScore","totalDifference","userGain","targetGain","logDifference","abs","log2","score","max","length","toggleComparisonMode","isComparison","comparisonGain","customEvent","modeToggleCheckbox","checked","scoreDisplay","style","visibility"],"sourceRoot":""}